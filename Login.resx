<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OP+HiIWTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6X04Ee3x3qX9p
        W/aAZE/2gmZQ9oRnUPaGaFD2iGlR9odrUPaIcFr2hH129oR7c/aIb1f2h2tQ9odqUPaGaVD2hGhQ9oNm
        UPaAZE/2f21h9nh6d44AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBQ
        NgFsc28tc3h6QnN5fEJzeXxBcnl8QXJ4fEFzeH1Bcnl9QXJ4fEFydnhCcnZ4QnJ4fEJyeHxCcnh8QnJ5
        fEFyeHxCdHh+QnN5fUJzd3lCaW9tJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMlM7AHF2cwB3eXkAd3l5AHd4eQB2eHkAd3h5AHh4egB3eXkAd3l5AHd5eQB3eXkAd3l5AHd4
        eQB3eHkAd3l5AHd4eQB4eHoAd3l5AHd5eQBuc3EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////w////gB///gAH//wAA//4AAH/8AAB//AAAP/wAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gA
        AD/4AAA/+AAAP/gAAB/wAAAP8AAAD/AAAB/4AAAf+AAAP/gAAD/4AAA/+AAAP/gAAD/4AAA/////////
        //8=
</value>
  </data>
</root>